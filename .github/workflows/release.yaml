name: Build precompiled NIFs

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.17"]
        job:
          - { target: x86_64-unknown-linux-musl   , os: ubuntu-22.04 , use-cross: true }

    env:
        RUSTLER_NIF_VERSION: ${{ matrix.nif }}
        RUST_BACKTRACE: 1
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Extract project version
      shell: bash
      run: |
        # Get the project version from mix.exs
        echo "PROJECT_VERSION=$(sed -n 's/^  @version "\(.*\)"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

    - name: Add target
      shell: bash
      run: |
        rustup target add ${{ matrix.job.target }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}
        
    - name: Build the project
      id: build-crate
      uses: philss/rustler-precompiled-action@v1.1.4
      with:
        project-name: ex_extractous
        project-version: ${{ env.PROJECT_VERSION }}
        target: ${{ matrix.job.target }}
        nif-version: ${{ matrix.nif }}
        use-cross: ${{ matrix.job.use-cross }}
        cross-version: ${{ matrix.job.cross-version || 'from-source' }}
        project-dir: "./"

    - name: Artifact upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build-crate.outputs.file-name }}
        path: ${{ steps.build-crate.outputs.file-path }}

    - name: Publish archives and packages
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.build-crate.outputs.file-path }}
      if: startsWith(github.ref, 'refs/tags/')

    - name: List files
      if: always()
      shell: bash
      run: |
        pwd && ls ./target/x86_64-unknown-linux-musl/release/*
